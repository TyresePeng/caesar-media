// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: douyin.proto

// Protobuf Java Version: 3.25.5
package org.caesar.crawler.live.douyin.codec.protobuf;

/**
 * Protobuf type {@code PicoDisplayInfo}
 */
public final class PicoDisplayInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:PicoDisplayInfo)
    PicoDisplayInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PicoDisplayInfo.newBuilder() to construct.
  private PicoDisplayInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PicoDisplayInfo() {
    emoji_ = "";
    emojiText_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new PicoDisplayInfo();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.caesar.crawler.live.douyin.codec.protobuf.Douyin.internal_static_PicoDisplayInfo_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.caesar.crawler.live.douyin.codec.protobuf.Douyin.internal_static_PicoDisplayInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo.class, org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo.Builder.class);
  }

  private int bitField0_;
  public static final int COMBOSUMCOUNT_FIELD_NUMBER = 1;
  private long comboSumCount_ = 0L;
  /**
   * <code>uint64 comboSumCount = 1;</code>
   * @return The comboSumCount.
   */
  @Override
  public long getComboSumCount() {
    return comboSumCount_;
  }

  public static final int EMOJI_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile Object emoji_ = "";
  /**
   * <code>string emoji = 2;</code>
   * @return The emoji.
   */
  @Override
  public String getEmoji() {
    Object ref = emoji_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      emoji_ = s;
      return s;
    }
  }
  /**
   * <code>string emoji = 2;</code>
   * @return The bytes for emoji.
   */
  @Override
  public com.google.protobuf.ByteString
      getEmojiBytes() {
    Object ref = emoji_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      emoji_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EMOJIICON_FIELD_NUMBER = 3;
  private org.caesar.crawler.live.douyin.codec.protobuf.Image emojiIcon_;
  /**
   * <code>.Image emojiIcon = 3;</code>
   * @return Whether the emojiIcon field is set.
   */
  @Override
  public boolean hasEmojiIcon() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.Image emojiIcon = 3;</code>
   * @return The emojiIcon.
   */
  @Override
  public org.caesar.crawler.live.douyin.codec.protobuf.Image getEmojiIcon() {
    return emojiIcon_ == null ? org.caesar.crawler.live.douyin.codec.protobuf.Image.getDefaultInstance() : emojiIcon_;
  }
  /**
   * <code>.Image emojiIcon = 3;</code>
   */
  @Override
  public org.caesar.crawler.live.douyin.codec.protobuf.ImageOrBuilder getEmojiIconOrBuilder() {
    return emojiIcon_ == null ? org.caesar.crawler.live.douyin.codec.protobuf.Image.getDefaultInstance() : emojiIcon_;
  }

  public static final int EMOJITEXT_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile Object emojiText_ = "";
  /**
   * <code>string emojiText = 4;</code>
   * @return The emojiText.
   */
  @Override
  public String getEmojiText() {
    Object ref = emojiText_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      emojiText_ = s;
      return s;
    }
  }
  /**
   * <code>string emojiText = 4;</code>
   * @return The bytes for emojiText.
   */
  @Override
  public com.google.protobuf.ByteString
      getEmojiTextBytes() {
    Object ref = emojiText_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      emojiText_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (comboSumCount_ != 0L) {
      output.writeUInt64(1, comboSumCount_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(emoji_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, emoji_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getEmojiIcon());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(emojiText_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, emojiText_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (comboSumCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, comboSumCount_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(emoji_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, emoji_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getEmojiIcon());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(emojiText_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, emojiText_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo)) {
      return super.equals(obj);
    }
    org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo other = (org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo) obj;

    if (getComboSumCount()
        != other.getComboSumCount()) return false;
    if (!getEmoji()
        .equals(other.getEmoji())) return false;
    if (hasEmojiIcon() != other.hasEmojiIcon()) return false;
    if (hasEmojiIcon()) {
      if (!getEmojiIcon()
          .equals(other.getEmojiIcon())) return false;
    }
    if (!getEmojiText()
        .equals(other.getEmojiText())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COMBOSUMCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getComboSumCount());
    hash = (37 * hash) + EMOJI_FIELD_NUMBER;
    hash = (53 * hash) + getEmoji().hashCode();
    if (hasEmojiIcon()) {
      hash = (37 * hash) + EMOJIICON_FIELD_NUMBER;
      hash = (53 * hash) + getEmojiIcon().hashCode();
    }
    hash = (37 * hash) + EMOJITEXT_FIELD_NUMBER;
    hash = (53 * hash) + getEmojiText().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code PicoDisplayInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:PicoDisplayInfo)
      org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.caesar.crawler.live.douyin.codec.protobuf.Douyin.internal_static_PicoDisplayInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.caesar.crawler.live.douyin.codec.protobuf.Douyin.internal_static_PicoDisplayInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo.class, org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo.Builder.class);
    }

    // Construct using org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getEmojiIconFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      comboSumCount_ = 0L;
      emoji_ = "";
      emojiIcon_ = null;
      if (emojiIconBuilder_ != null) {
        emojiIconBuilder_.dispose();
        emojiIconBuilder_ = null;
      }
      emojiText_ = "";
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.caesar.crawler.live.douyin.codec.protobuf.Douyin.internal_static_PicoDisplayInfo_descriptor;
    }

    @Override
    public org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo getDefaultInstanceForType() {
      return org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo.getDefaultInstance();
    }

    @Override
    public org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo build() {
      org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo buildPartial() {
      org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo result = new org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.comboSumCount_ = comboSumCount_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.emoji_ = emoji_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.emojiIcon_ = emojiIconBuilder_ == null
            ? emojiIcon_
            : emojiIconBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.emojiText_ = emojiText_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo) {
        return mergeFrom((org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo other) {
      if (other == org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo.getDefaultInstance()) return this;
      if (other.getComboSumCount() != 0L) {
        setComboSumCount(other.getComboSumCount());
      }
      if (!other.getEmoji().isEmpty()) {
        emoji_ = other.emoji_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasEmojiIcon()) {
        mergeEmojiIcon(other.getEmojiIcon());
      }
      if (!other.getEmojiText().isEmpty()) {
        emojiText_ = other.emojiText_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              comboSumCount_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              emoji_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getEmojiIconFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              emojiText_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long comboSumCount_ ;
    /**
     * <code>uint64 comboSumCount = 1;</code>
     * @return The comboSumCount.
     */
    @Override
    public long getComboSumCount() {
      return comboSumCount_;
    }
    /**
     * <code>uint64 comboSumCount = 1;</code>
     * @param value The comboSumCount to set.
     * @return This builder for chaining.
     */
    public Builder setComboSumCount(long value) {

      comboSumCount_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 comboSumCount = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearComboSumCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      comboSumCount_ = 0L;
      onChanged();
      return this;
    }

    private Object emoji_ = "";
    /**
     * <code>string emoji = 2;</code>
     * @return The emoji.
     */
    public String getEmoji() {
      Object ref = emoji_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        emoji_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string emoji = 2;</code>
     * @return The bytes for emoji.
     */
    public com.google.protobuf.ByteString
        getEmojiBytes() {
      Object ref = emoji_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        emoji_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string emoji = 2;</code>
     * @param value The emoji to set.
     * @return This builder for chaining.
     */
    public Builder setEmoji(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      emoji_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string emoji = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearEmoji() {
      emoji_ = getDefaultInstance().getEmoji();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string emoji = 2;</code>
     * @param value The bytes for emoji to set.
     * @return This builder for chaining.
     */
    public Builder setEmojiBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      emoji_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private org.caesar.crawler.live.douyin.codec.protobuf.Image emojiIcon_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.caesar.crawler.live.douyin.codec.protobuf.Image, org.caesar.crawler.live.douyin.codec.protobuf.Image.Builder, org.caesar.crawler.live.douyin.codec.protobuf.ImageOrBuilder> emojiIconBuilder_;
    /**
     * <code>.Image emojiIcon = 3;</code>
     * @return Whether the emojiIcon field is set.
     */
    public boolean hasEmojiIcon() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.Image emojiIcon = 3;</code>
     * @return The emojiIcon.
     */
    public org.caesar.crawler.live.douyin.codec.protobuf.Image getEmojiIcon() {
      if (emojiIconBuilder_ == null) {
        return emojiIcon_ == null ? org.caesar.crawler.live.douyin.codec.protobuf.Image.getDefaultInstance() : emojiIcon_;
      } else {
        return emojiIconBuilder_.getMessage();
      }
    }
    /**
     * <code>.Image emojiIcon = 3;</code>
     */
    public Builder setEmojiIcon(org.caesar.crawler.live.douyin.codec.protobuf.Image value) {
      if (emojiIconBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        emojiIcon_ = value;
      } else {
        emojiIconBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.Image emojiIcon = 3;</code>
     */
    public Builder setEmojiIcon(
        org.caesar.crawler.live.douyin.codec.protobuf.Image.Builder builderForValue) {
      if (emojiIconBuilder_ == null) {
        emojiIcon_ = builderForValue.build();
      } else {
        emojiIconBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.Image emojiIcon = 3;</code>
     */
    public Builder mergeEmojiIcon(org.caesar.crawler.live.douyin.codec.protobuf.Image value) {
      if (emojiIconBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          emojiIcon_ != null &&
          emojiIcon_ != org.caesar.crawler.live.douyin.codec.protobuf.Image.getDefaultInstance()) {
          getEmojiIconBuilder().mergeFrom(value);
        } else {
          emojiIcon_ = value;
        }
      } else {
        emojiIconBuilder_.mergeFrom(value);
      }
      if (emojiIcon_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.Image emojiIcon = 3;</code>
     */
    public Builder clearEmojiIcon() {
      bitField0_ = (bitField0_ & ~0x00000004);
      emojiIcon_ = null;
      if (emojiIconBuilder_ != null) {
        emojiIconBuilder_.dispose();
        emojiIconBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.Image emojiIcon = 3;</code>
     */
    public org.caesar.crawler.live.douyin.codec.protobuf.Image.Builder getEmojiIconBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getEmojiIconFieldBuilder().getBuilder();
    }
    /**
     * <code>.Image emojiIcon = 3;</code>
     */
    public org.caesar.crawler.live.douyin.codec.protobuf.ImageOrBuilder getEmojiIconOrBuilder() {
      if (emojiIconBuilder_ != null) {
        return emojiIconBuilder_.getMessageOrBuilder();
      } else {
        return emojiIcon_ == null ?
            org.caesar.crawler.live.douyin.codec.protobuf.Image.getDefaultInstance() : emojiIcon_;
      }
    }
    /**
     * <code>.Image emojiIcon = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.caesar.crawler.live.douyin.codec.protobuf.Image, org.caesar.crawler.live.douyin.codec.protobuf.Image.Builder, org.caesar.crawler.live.douyin.codec.protobuf.ImageOrBuilder>
        getEmojiIconFieldBuilder() {
      if (emojiIconBuilder_ == null) {
        emojiIconBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.caesar.crawler.live.douyin.codec.protobuf.Image, org.caesar.crawler.live.douyin.codec.protobuf.Image.Builder, org.caesar.crawler.live.douyin.codec.protobuf.ImageOrBuilder>(
                getEmojiIcon(),
                getParentForChildren(),
                isClean());
        emojiIcon_ = null;
      }
      return emojiIconBuilder_;
    }

    private Object emojiText_ = "";
    /**
     * <code>string emojiText = 4;</code>
     * @return The emojiText.
     */
    public String getEmojiText() {
      Object ref = emojiText_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        emojiText_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string emojiText = 4;</code>
     * @return The bytes for emojiText.
     */
    public com.google.protobuf.ByteString
        getEmojiTextBytes() {
      Object ref = emojiText_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        emojiText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string emojiText = 4;</code>
     * @param value The emojiText to set.
     * @return This builder for chaining.
     */
    public Builder setEmojiText(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      emojiText_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>string emojiText = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearEmojiText() {
      emojiText_ = getDefaultInstance().getEmojiText();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>string emojiText = 4;</code>
     * @param value The bytes for emojiText to set.
     * @return This builder for chaining.
     */
    public Builder setEmojiTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      emojiText_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:PicoDisplayInfo)
  }

  // @@protoc_insertion_point(class_scope:PicoDisplayInfo)
  private static final org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo();
  }

  public static org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PicoDisplayInfo>
      PARSER = new com.google.protobuf.AbstractParser<PicoDisplayInfo>() {
    @Override
    public PicoDisplayInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PicoDisplayInfo> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<PicoDisplayInfo> getParserForType() {
    return PARSER;
  }

  @Override
  public org.caesar.crawler.live.douyin.codec.protobuf.PicoDisplayInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

